<?php

namespace modules\redsms\models\entities;

use Yii;
use yii\base\Model;
use yii\web\HttpException;


class RedSms extends Model
{

    const REDSMS_FORMAT_JSON = 'json';
    const REDSMS_FORMAT_XML = 'xml';
    const REDSMS_REG = "/^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$/";

    const STATUS_SERVICE_OFF = '000';
    const STATUS_EMPTY_SIGNATURE = 1;
    const STATUS_EMPTY_LOGIN = 2;
    const STATUS_EMPTY_TEXT = 3;
    const STATUS_EMPTY_PHONE = 4;
    const STATUS_EMPTY_SENDER = 5;
    const STATUS_INVALID_SIGNATURE = 6;
    const STATUS_INVALID_LOGIN = 7;
    const STATUS_INVALID_SENDER = 8;
    const STATUS_UNREGISTERED_SENDER = 9;
    const STATUS_UNAPPROVED_SENDER = 10;
    const STATUS_BAD_WORDS = 11;
    const STATUS_SMS_SENDING_ERROR = 12;
    const STATUS_RECIPIENT_IN_BLACKLIST = 13;
    const STATUS_OVER_50_PHONES = 14;
    const STATUS_UNDEFINED_BASE = 15;
    const STATUS_INCORRECT_PHONE = 16;
    const STATUS_EMPTY_SMS_ID = 17;
    const STATUS_UNDEFINED_STATUS = 18;
    const STATUS_EMPTY_RESPONSE = 19;
    const STATUS_PHONE_EXISTS = 20;
    const STATUS_EMPTY_NAME = 21;
    const STATUS_TEMPLATE_EXISTS = 22;
    const STATUS_EMPTY_MONTH = 23;
    const STATUS_EMPTY_TIMESTAMP = 24;
    const STATUS_BASE_ACCESS_ERROR = 25;
    const STATUS_EMPTY_BASE = 26;
    const STATUS_NO_VALID_NUMBERS = 27;
    const STATUS_UNDEFINED_BEGIN_DATE = 28;
    const STATUS_UNDEFINED_END_DATE = 29;
    const STATUS_UNDEFINED_DATE = 30;
    const STATUS_INVALID_SINGLE_RECIPIENT = 41;
    const STATUS_INVALID_BATCH_RECIPIENT = 42;
    const STATUS_INVALID_ACCOUNT_DATA = 43;
    const STATUS_INVALID_STRING_RECIPIENT = 44;
    const STATUS_NO_MONEY = 45;
    const STATUS_UNKNOWN_STATUS = 50;

    protected $login;
    protected $apiKey;
    protected $format;
    protected $baseURL = 'https://lk.redsms.ru/get/';
    protected $url = [
        'timestamp' => 'timestamp.php',
        'balance' => 'balance.php',
        'base' => 'base.php',
        'senders' => 'senders.php',
        'phones' => 'phone.php',
        'status' => 'status.php',
        'send' => 'send.php',
        'find_on_stop' => 'find_on_stop.php',
        'add2stop' => 'add2stop.php',
        'stat_by_month' => 'stat_by_month.php',
    ];

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->login = Yii::$app->getModule('redsms')->login;
        $this->apiKey = Yii::$app->getModule('redsms')->apiKey;
        $this->format = 'json';
    }

    protected function humanizeResponse($rawData, $format = Redsms::REDSMS_FORMAT_JSON)
    {
        if (true === isset($rawData['sys-error'])) {
            return $rawData;
        }
        switch ($format) {
            case Redsms::REDSMS_FORMAT_JSON :
                $out = $this->parse($rawData);
                break;
            default:
                $out = $rawData;
        }
        if (true === is_array($out) && true === isset($out['error']) && $out['error'] != 19 && $out['error'] != 20 && $out['error'] != 18) {
            $message = $this->handle($out['error']);
            throw new HttpException(405, $message);
        }
        return $out;
    }

    protected function processSms($recipient, $text, $sender)
    {
        $params = [
            'phone' => $recipient,
            'text' => $text,
            'sender' => $sender,
            'return' => $this->format,
        ];
        $url = $this->createUrl('send', $params);
        $response = $this->executeHttpQuery($url);
        return $this->humanizeResponse($response);
    }

    protected function getTimestamp()
    {
        $url = $this->baseURL . $this->url['timestamp'];
        return $this->executeHttpQuery($url);
    }

    protected function createQueryString($queryParams)
    {
        $queryParams = is_array($queryParams) ? $queryParams : (array)$queryParams;
        $queryParams = array_merge($queryParams,
            [
                'timestamp' => $this->getTimestamp(),
                'login' => $this->login,
            ]
        );
        $queryParams['signature'] = $this->signature($queryParams);
        return http_build_query($queryParams);
    }

    protected function signature($params)
    {
        ksort($params);
        reset($params);
        return md5(implode($params) . $this->apiKey);
    }

    public function createUrl($u, $params = [])
    {
        $queryString = $this->createQueryString($params);
        return $this->baseURL . $this->url[$u] . '/?' . $queryString;
    }

    protected function executeHttpQuery($url)
    {
        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_ENCODING, "utf-8");
        curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 120);
        curl_setopt($curl, CURLOPT_TIMEOUT, 120);
        curl_setopt($curl, CURLOPT_MAXREDIRS, 10);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        if (false === $res = curl_exec($curl)) {
            return ['sys-error' => true, 'message' => curl_error($curl)];
        }
        return $res;
    }

    public function messages()
    {
        return [
            self::STATUS_SERVICE_OFF => Yii::t('redsms','Service turned off'),
            self::STATUS_EMPTY_SIGNATURE => Yii::t('redsms','Undefined signature'),
            self::STATUS_EMPTY_LOGIN => Yii::t('redsms','Undefined login'),
            self::STATUS_EMPTY_TEXT => Yii::t('redsms','Undefined text'),
            self::STATUS_EMPTY_PHONE => Yii::t('redsms','Undefined phone'),
            self::STATUS_EMPTY_SENDER => Yii::t('redsms','Undefined sender'),
            self::STATUS_INVALID_SIGNATURE => Yii::t('redsms','Invalid signature'),
            self::STATUS_INVALID_LOGIN => Yii::t('redsms','Invalid login'),
            self::STATUS_INVALID_SENDER => Yii::t('redsms','Invalid sender'),
            self::STATUS_UNREGISTERED_SENDER => Yii::t('redsms','Unregistered sender'),
            self::STATUS_UNAPPROVED_SENDER => Yii::t('redsms','Unapproved sender'),
            self::STATUS_BAD_WORDS => Yii::t('redsms','Text contains restricted words'),
            self::STATUS_SMS_SENDING_ERROR => Yii::t('redsms','Sms sending error'),
            self::STATUS_RECIPIENT_IN_BLACKLIST => Yii::t('redsms','Number is in the blacklist. Sending denied'),
            self::STATUS_OVER_50_PHONES => Yii::t('redsms','There are over 50 numbers in request'),
            self::STATUS_UNDEFINED_BASE => Yii::t('redsms','Undefined phone base'),
            self::STATUS_INCORRECT_PHONE => Yii::t('redsms','Invalid number'),
            self::STATUS_EMPTY_SMS_ID => Yii::t('redsms','Empty sms ids'),
            self::STATUS_UNDEFINED_STATUS => Yii::t('redsms','No status received'),
            self::STATUS_EMPTY_RESPONSE => Yii::t('redsms','Empty response'),
            self::STATUS_PHONE_EXISTS => Yii::t('redsms','Number already exists'),
            self::STATUS_EMPTY_NAME => Yii::t('redsms','Empty name'),
            self::STATUS_TEMPLATE_EXISTS => Yii::t('redsms','Template already exists'),
            self::STATUS_EMPTY_MONTH => Yii::t('redsms','Undefined month (format: YYYY-MM)'),
            self::STATUS_EMPTY_TIMESTAMP => Yii::t('redsms','Undefined timestamp'),
            self::STATUS_BASE_ACCESS_ERROR => Yii::t('redsms','Base access error'),
            self::STATUS_EMPTY_BASE => Yii::t('redsms','There are no numbers in base'),
            self::STATUS_NO_VALID_NUMBERS => Yii::t('redsms','No valid numbers are presented'),
            self::STATUS_UNDEFINED_BEGIN_DATE => Yii::t('redsms','Undefined start date'),
            self::STATUS_UNDEFINED_END_DATE => Yii::t('redsms','Undefined end date'),
            self::STATUS_UNDEFINED_DATE => Yii::t('redsms','Undefined date (format: YYYY-MM-DD)'),
            self::STATUS_INVALID_SINGLE_RECIPIENT => Yii::t('redsms','Param $recipient must be a single phone number'),
            self::STATUS_INVALID_BATCH_RECIPIENT => Yii::t('redsms','Param $recipient must be an array of phone numbers'),
            self::STATUS_INVALID_STRING_RECIPIENT => Yii::t('redsms','String $recipient must be an phone numbers ","'),
            self::STATUS_INVALID_ACCOUNT_DATA => Yii::t('redsms','Empty login or API access token. Cannot proceed.'),
            self::STATUS_NO_MONEY => Yii::t('redsms','No money'),
            self::STATUS_UNKNOWN_STATUS => Yii::t('redsms','Unknown API status')
        ];
    }

    protected function handle($status)
    {
        $messages = self::messages();
        if (true === isset($messages[$status])) {
            return $messages[$status];
        }
        return $messages[self::STATUS_UNKNOWN_STATUS];
    }

    protected function parse($json)
    {
        if (is_array($json) || $json === null || $json === '') {
            return ['sys-error' => true, 'Invalid JSON data.'];
        }
        $decode = json_decode((string)$json, true);
        if (JSON_ERROR_NONE === $message = json_last_error()) {
            return $decode;
        } else {
            return ['sys-error' => true, $message];
        }
    }

}